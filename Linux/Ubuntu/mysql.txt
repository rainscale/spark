1.检查是否安装mysql
dpkg -l | grep mysql-server

2.卸载已安装mysql
sudo apt remove mysql-server

3.安装mysql
sudo apt install mysql-server

4.查看是否打开mysql服务
systemctl status mysql / service mysql start
● mysql.service - MySQL Community Server
     Loaded: loaded (/lib/systemd/system/mysql.service; enabled; vendor preset:>
     Active: active (running) since Sun 2024-09-08 12:31:44 CST; 1min 35s ago
    Process: 31409 ExecStartPre=/usr/share/mysql/mysql-systemd-start pre (code=>
   Main PID: 31417 (mysqld)
     Status: "Server is operational"
      Tasks: 37 (limit: 9297)
     Memory: 365.6M
        CPU: 2.477s
     CGroup: /system.slice/mysql.service
             └─31417 /usr/sbin/mysqld

9月 08 12:31:42 spark-yu systemd[1]: Starting MySQL Community Server...
9月 08 12:31:44 spark-yu systemd[1]: Started MySQL Community Server.

5.打开mysql服务
systemctl start mysql / systemctl start mysqld(有些老版本需要启动的是mysqld) / service mysql start

停止mysql服务
sudo systemctl stop mysql

6.查看mysql进程
ps axj | grep mysql
      1   31417   31417   31417 ?             -1 Ssl    130   0:05 /usr/sbin/mysqld
   3274   31539   31538    3274 pts/0      31538 S+    1000   0:00 grep --color=auto mysql
   
sudo netstat -tap | grep mysql
tcp        0      0 localhost:33060         0.0.0.0:*               LISTEN      31417/mysqld        
tcp        0      0 localhost:mysql         0.0.0.0:*               LISTEN      31417/mysqld 

7.第一次登陆mysql，如果你还没有设置过root密码，修改root密码
sudo mysql
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'your password';
FLUSH PRIVILEGES;
EXIT;
sudo systemctl start mysql

8.登录mysql
mysql -u root -pxxxx

9.创建数据库
create database xxx;
create database xxx charset=utf8;

删除数据库
drop database xxx;

10.显示当前数据库
show databases;

11.使用数据库
use xxx;

12.创建表
语法: 
create table 表名(
字段名　数据类型,
字段名　数据类型,
......
字段名　数据类型);

create table students(
id int,
name varchar(32),
age int,
gender varchar(2)
);

如果你想设置数字为无符号则加上 unsigned
如果你不想字段为 null， 可以设置字段的属性为 not null, 在操作数据库时如果输入该字段的数据为null ,就会报错。
default表示设置一个字段的默认值
auto_increment定义列为自增的属性,一般用于主键,数值会自动加1。
primary key关键字用于定义列为主键。主键的值不能重复。

查看数据表　　　　　　show tables;
查看已有表的字符集　　show create table 表名;
查看表结构　　　　　　desc 表名;
删除表　　　　　　　　drop table 表名;

13.插入数据
语法: 
insert into 表名 values (记录1),(记录2),...;
insert into 表名(字段1,字段２...) values(记录1),...; 

insert into students (id, name, age, gender) values (1, '张三', 18, '男');
insert into students (id, name, age, gender) values (2, '李四', 16, '女');
insert into students (id, name, age, gender) values (3, '王五', 20, '男');
insert into students values (4, '李白', 17, '男'), (5, '杜甫', 45, '男');

14.查询数据
语法:
select * from 表名 [where 条件];
select 字段1,字段名2 from 表名 [where 条件];

select * from students;
+------+--------+------+--------+
| id   | name   | age  | gender |
+------+--------+------+--------+
|    1 | 张三   |   18 | 男     |
|    2 | 李四   |   16 | 女     |
|    3 | 王五   |   20 | 男     |
|    4 | 李白   |   17 | 男     |
|    5 | 杜甫   |   45 | 男     |
+------+--------+------+--------+
3 rows in set (0.00 sec)

select name, age from students where age < 20;
+--------+------+
| name   | age  |
+--------+------+
| 张三   |   18 |
| 李四   |   16 |
| 李白   |   17 |
+--------+------+
3 rows in set (0.00 sec)

15.更新数据
语法: update 表名 set 字段1=值1,字段2=值2,... where 条件;
update students set age=11 where name='杜甫';

16.删除数据
语法: delete from 表名 where 条件;
注意: delete语句后如果不加where条件,所有记录全部清空
delete from students where name='杜甫';

17.字段操作(alter)
语法: alter table 表名 执行动作;
添加字段(add)
alter table 表名 add 字段名 数据类型;
alter table 表名 add 字段名 数据类型 first;　　#增加到第一个位置
alter table 表名 add 字段名 数据类型 after 字段名;　　　　＃增加到某一个字段名后面

alter table student add del int default '0' comment '是否删除';
alter table interest add data cha(10) first;
alter table interest add date Date cha(10) after course;

删除字段(drop)
alter table 表名 drop 字段名;

修改字段类型(modify)
alter table 表名 modify 字段名 新数据类型;

修改字段名(change)
alter table 表名 change 旧字段名 新字段名 新数据类型;
alter table class change sex gender enum("m","w");

表 重命名(rename)
alter table 表名 rename 新表名;
alter table class rename chass_1;

18.数据类型
整数类型(精确值) - int, integer,  smallint, tinyint, mediumint, bigint
浮点类型(近似值) - float, double
定点类型(精确值) - decimal
比特值类型 - bit

字符串类型:
char和varchar类型
binary和varbinary类型
blob和text类型
enum类型和set类型

char和 varchar
char: 定长,效率高,一般用于固定长度的表单提交数据存储,默认1字符
varchar: 不定长,效率偏低

text和blob
text: 用来存储非二进制文本
blob: 用来存储二进制字节串

enum和 set
enum: 用来存储给出的一个值
set: 用来存储给出的值中一个或多个值

